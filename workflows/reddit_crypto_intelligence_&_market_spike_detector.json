{
  "name": "Reddit Crypto Intelligence & Market Spike Detector",
  "nodes": [
    {
      "parameters": {
        "url": "https://www.reddit.com/r/CryptoCurrency/new/.rss",
        "responseFormat": "string",
        "options": {}
      },
      "id": "de966d28-3914-4942-889c-355dbd984451",
      "name": "Fetch Reddit Posts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        256,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Handle both string and object responses safely\nlet xml = items[0].json;\n\nif (typeof xml === 'object') {\n  // Sometimes n8n wraps RSS inside a \"body\" or returns it as JSON\n  xml = xml.body || JSON.stringify(xml);\n}\n\n// Ensure xml is a string\nif (typeof xml !== 'string') {\n  xml = String(xml);\n}\n\n// Extract <title> tags (works for Atom feeds too)\nconst titles = [];\nconst regex = /<title>(?:<!\\[CDATA\\[)?(.*?)(?:\\]\\]>)?<\\/title>/gms;\nlet match;\nwhile ((match = regex.exec(xml)) !== null) {\n  titles.push(match[1].toLowerCase());\n}\n\n// Find coin mentions\nconst coinsMentioned = new Set();\n\nfor (const title of titles) {\n  if (title.includes('btc') || title.includes('bitcoin')) coinsMentioned.add('bitcoin');\n  if (title.includes('eth') || title.includes('ethereum')) coinsMentioned.add('ethereum');\n  if (title.includes('sol') || title.includes('solana')) coinsMentioned.add('solana');\n  if (title.includes('doge') || title.includes('dogecoin')) coinsMentioned.add('dogecoin');\n  if (title.includes('xrp')) coinsMentioned.add('ripple');\n  if (title.includes('ada') || title.includes('cardano')) coinsMentioned.add('cardano');\n}\n\n// Return results\nreturn Array.from(coinsMentioned).map(coin => ({ json: { coin } }));"
      },
      "id": "f73f317a-d1ef-425f-bd21-d99e57813ff0",
      "name": "Extract Coin Mentions",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        528,
        0
      ]
    },
    {
      "parameters": {
        "url": "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1",
        "options": {}
      },
      "id": "af8387f2-a014-4398-be40-ad0d4c1168d3",
      "name": "Fetch Coin Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        800,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data safely\nconst itemsIn = items.length > 0 ? items : [];\nif (itemsIn.length === 0) {\n  return [{ json: { message: 'No price data received' } }];\n}\n\n// Extract prices safely\nconst priceData = itemsIn.map(i => i.json).filter(d => d && d.current_price !== undefined);\n\n// Early exit if missing data\nif (priceData.length === 0) {\n  return [{ json: { message: 'No valid price data found' } }];\n}\n\n// Detect spikes: > 10% up or down in 24h\nconst threshold = 10; // percent\nconst spikes = [];\n\nfor (const token of priceData) {\n  const change = token.price_change_percentage_24h;\n  if (typeof change === 'number' && Math.abs(change) >= threshold) {\n    spikes.push({\n      id: token.id,\n      symbol: token.symbol,\n      name: token.name,\n      current_price: token.current_price,\n      change_24h: change,\n      direction: change > 0 ? 'up' : 'down',\n      last_updated: token.last_updated\n    });\n  }\n}\n\n// Return n8n-compatible output\nif (spikes.length === 0) {\n  return [{ json: { message: 'No major price spikes detected' } }];\n}\n\nreturn spikes.map(spike => ({ json: spike }));"
      },
      "id": "1e21559f-f057-4ec5-9696-c451ff3a3929",
      "name": "Detect Price Spike",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1072,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\n// If no spike data, send a generic message\nif (!data.symbol || !data.name || data.change_24h === undefined) {\n  return {\n    json: {\n      content: `No price spikes detected in the latest check.`\n    }\n  };\n}\n\nconst directionEmoji = data.direction === 'up' ? 'üöÄ' : 'üìâ';\nconst changeText = data.change_24h.toFixed(2);\nconst msg = `${directionEmoji} **${data.name} (${data.symbol.toUpperCase()})** moved *${changeText}%* ${data.direction} in the last 24h!\\nüí∞ Price: $${data.current_price}\\nüïí Updated: ${data.last_updated}`;\n\nreturn {\n  json: {\n    content: msg\n  }\n};"
      },
      "id": "601b2165-dec2-4807-ad72-5343eecf2b23",
      "name": "Compose Discord Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1328,
        0
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1280652666577354803",
          "mode": "list",
          "cachedResultName": "Renz's server",
          "cachedResultUrl": "https://discord.com/channels/1280652666577354803"
        },
        "channelId": {
          "__rl": true,
          "value": "1280652667408089210",
          "mode": "list",
          "cachedResultName": "general",
          "cachedResultUrl": "https://discord.com/channels/1280652666577354803/1280652667408089210"
        },
        "content": "={{ $json.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1568,
        0
      ],
      "id": "dcba08bf-62c3-4cff-a327-d0fc45d14718",
      "name": "Send a message",
      "webhookId": "27e78eb8-df02-4ae4-b9b7-b831dbb1bec1",
      "credentials": {
        "discordBotApi": {
          "id": "9ivVgYWgpq4MNHqd",
          "name": "Discord Bot Token"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "6c67e9ae-1b14-422d-aaf2-df6b4a4d0aaf",
      "name": "Hourly",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "content": "This node schedules the workflow to run automatically every hour.\nIt ensures consistent monitoring of Reddit activity without manual execution.\nYou can adjust the interval as needed (e.g., every 15 minutes or 2 hours).",
        "height": 400,
        "width": 224
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -64,
        -240
      ],
      "typeVersion": 1,
      "id": "6f44e950-9086-4aa6-89e3-39ea0ddc0998",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "This node retrieves the latest posts from the r/CryptoCurrency subreddit using Reddit‚Äôs public RSS feed.\nThe feed provides a lightweight and free way to monitor new crypto discussions in real time.\nEach post includes a title, link, author, and timestamp.\nThese are then parsed to detect potential mentions of new tokens or trending coins.",
        "height": 400,
        "width": 272,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -240
      ],
      "typeVersion": 1,
      "id": "bd5d8e35-74de-4cc4-ad71-e0b152ff236b",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "This node retrieves live price data and 24-hour percentage changes for the detected coin symbols from the CoinGecko public API.\nCoinGecko is completely free to use with a rate limit of 10‚Äì30 calls per minute (no API key required).\nThis step connects Reddit sentiment to real-time market data.\n",
        "height": 400,
        "width": 272,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -240
      ],
      "typeVersion": 1,
      "id": "a99448b3-dcde-459f-abba-ec9c675d49b9",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "This code node extracts coin tickers or symbols (e.g., $BTC, $ETH, $SOL, $MOONX) from the Reddit post titles.\nIt uses a simple regex (\\$[A-Za-z0-9]{2,10}) to detect these mentions.\nThe results are cleaned and standardized to lowercase for easier processing.\nIf no matches are found, the node returns a ‚ÄúNo coin mentions detected‚Äù message.\n",
        "height": 400,
        "width": 288,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        432,
        -240
      ],
      "typeVersion": 1,
      "id": "8294e1e8-bb28-4bcd-8088-19e322765e16",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "This code node detects significant market movements (default ¬±5% in 24h).\nIf any coin mentioned on Reddit has a large movement, it‚Äôs flagged as a potential market signal.\nThis node filters out noise and highlights only meaningful spikes.",
        "height": 400,
        "width": 256,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        -240
      ],
      "typeVersion": 1,
      "id": "c00ae4b4-706b-4a1a-ac4f-feb932fb80ff",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "This node builds a clear, well-formatted alert message for Discord.\nIf price spikes were detected, it lists each coin with price, change %, and timestamp.\nIf no spikes were found, it sends a neutral ‚Äúno changes‚Äù message instead.",
        "height": 400,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1248,
        -240
      ],
      "typeVersion": 1,
      "id": "69608355-b258-45ee-b304-c336817cd929",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "This node posts the composed message into your Discord channel via Webhook.\nYou can set up the Webhook inside your Discord server (Settings ‚Üí Integrations ‚Üí Webhooks).\nThis creates a simple and real-time alert delivery system.",
        "height": 400,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1488,
        -240
      ],
      "typeVersion": 1,
      "id": "9d4903f1-7a90-4307-bf97-f9c56b1a37ec",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "This n8n automation continuously monitors the r/CryptoCurrency subreddit for new coin mentions, correlates them with live CoinGecko market data, and detects significant market movements.\n\nWhen price spikes are identified, it sends real-time Discord alerts summarizing affected tokens, price, and percentage change.\n\nBy blending social sentiment signals with market analytics, this workflow acts as an early-warning system for trending tokens and volatility events ‚Äî all using free, open APIs.\n\nüß© n8n instance: Self-hosted or Cloud\nüí¨ Discord Webhook URL: Create via Discord ‚Üí Server Settings ‚Üí Integrations ‚Üí Webhooks\nüåê Reddit RSS Feed (Free) URL: https://www.reddit.com/r/CryptoCurrency/new/.rss\nüìä CoinGecko API (Free): No API key required\n‚è∞ Recommended schedule: Every hour or every 30 minutes\n\n## AFK Crypto Website: afkcrypto.com",
        "height": 368,
        "width": 672
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1728,
        -208
      ],
      "typeVersion": 1,
      "id": "34f756c9-e83a-4cf8-b171-3abaf3358965",
      "name": "Sticky Note7"
    }
  ],
  "pinData": {},
  "connections": {
    "Fetch Reddit Posts": {
      "main": [
        [
          {
            "node": "Extract Coin Mentions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Coin Mentions": {
      "main": [
        [
          {
            "node": "Fetch Coin Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Coin Data": {
      "main": [
        [
          {
            "node": "Detect Price Spike",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Detect Price Spike": {
      "main": [
        [
          {
            "node": "Compose Discord Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compose Discord Message": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hourly": {
      "main": [
        [
          {
            "node": "Fetch Reddit Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "589c20d8-9d91-4fb5-bd33-065d2b1be371",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c4eae34af81eeff658410c97c38d8a485e4c73ba5cea5b25eef189aa5e5a73b9"
  },
  "id": "Qs7SzwsfqN05P3H2",
  "tags": []
}