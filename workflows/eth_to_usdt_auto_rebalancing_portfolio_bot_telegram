{
  "name": "ETH to USDT Auto-Rebalancing Portfolio Bot (Telegram)",
  "nodes": [
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "https://app.afkcrypto.com/api/v1/wallets/balances?chain=ethereum",
        "options": {}
      },
      "id": "84a92f8a-0ef6-4474-a99c-5cdb70cbc2aa",
      "name": "Get SOL Balance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        448,
        0
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "TMb8pmWTMkxEjk1x",
          "name": "AFK_Crypto_API_Key"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.afkcrypto.com/api/v1/trade/swap",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Idempotency-Key",
              "value": "={{ $execution.id }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chain",
              "value": "={{ $('Edit Fields').item.json.chain }}"
            },
            {
              "name": "fromToken",
              "value": "={{ $('Edit Fields').item.json.fromToken }}"
            },
            {
              "name": "toToken",
              "value": "={{ $('Edit Fields').item.json['toToken (USDT)'] }}"
            },
            {
              "name": "amount",
              "value": "={{ $('Leave 5 ETH').item.json.amount }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        0
      ],
      "id": "32133773-a263-4b61-b246-897cd8fe5a1d",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "TMb8pmWTMkxEjk1x",
          "name": "AFK_Crypto_API_Key"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e9ace21f-260a-4811-bab1-5b8b47261de5",
              "name": "chain",
              "value": "ethereum",
              "type": "string"
            },
            {
              "id": "495c05c6-0d33-4609-b78b-79b0882cdaab",
              "name": "fromToken",
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
              "type": "string"
            },
            {
              "id": "c3272e97-0c92-47c8-bf25-a30102c17d5a",
              "name": "toToken (USDT)",
              "value": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        0
      ],
      "id": "2299979f-9741-4904-a315-9fbb6b76fd29",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "994b2c63-baad-48cd-b7a6-92b6653bde5c",
      "name": "12AM"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "635a42d1-755f-4d98-9b7f-fcc75a79d2df",
              "leftValue": "={{ $json.swapNeeded }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        896,
        0
      ],
      "id": "cc7636ef-2087-4a01-b3eb-f2079d0dda48",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Get balances from AFK Crypto API\nconst balances = $json.balances || [];\n\n// Find ETH balance\nconst ethBalance = balances.find(b => b.tokenSymbol === 'ETH');\nconst ethWei = ethBalance ? BigInt(ethBalance.amount) : BigInt(0);\n\n// Define minimum ETH to keep (e.g., 5 ETH in wei)\nconst targetWei = BigInt(5) * BigInt(1e18);  // 5 ETH\n\n// Calculate swap amount (only excess beyond 5 ETH)\nconst swapWei = ethWei > targetWei\n  ? ethWei - targetWei\n  : BigInt(0);\n\n// Output object\nreturn [\n  {\n    json: {\n      fromToken: \"ETH\",\n      toToken: \"USDT\",   // or \"USDC\"\n      amount: swapWei.toString(),             // ‚úÖ directly mappable\n      ethBalanceWei: ethWei.toString(),       // raw wei\n      ethBalanceReadable: Number(ethWei) / 1e18,  // in ETH\n      targetWei: targetWei.toString(),\n      targetReadable: Number(targetWei) / 1e18,\n      swapReadable: Number(swapWei) / 1e18,   // in ETH\n      swapNeeded: swapWei > 0\n    }\n  }\n];\n"
      },
      "id": "4d0afcd8-5854-4bc9-82d0-52d15a7e31df",
      "name": "Leave 5 ETH",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        672,
        0
      ]
    },
    {
      "parameters": {
        "chatId": "CHAT_ID",
        "text": "=Rebalanced: Swapped {{ $('Leave 5 ETH').item.json.amount }} SOL ‚Üí USDT",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1344,
        0
      ],
      "id": "e6c4e0ea-79dd-41c4-adc8-10e4c90a747a",
      "name": "Send a text message",
      "webhookId": "64168bd1-9a23-4cc7-bf05-5abdf54808c2",
      "credentials": {
        "telegramApi": {
          "id": "P5PVPL3oGa7q3l59",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Try It Out!\n\nThe ETH to USDT Auto-Rebalancing Portfolio Bot (Telegram) is an automated ETH portfolio optimizer that runs daily at 12:00 AM.\nIt ensures your Ethereum wallet always retains a minimum reserve of 5 ETH, automatically converting any excess balance into USDT via the AFK Crypto Swap API. After each successful swap, the bot sends a Telegram notification detailing the transaction, allowing you to track your automated rebalancing in real time ‚Äî without ever opening your wallet manually.\n\nHow It Works\n\n12AM Trigger\nActivates the workflow every day at midnight, kicking off the automated ETH balance check and rebalancing routine.\n\nEdit Fields\nDefines essential parameters for the workflow:\n\nchain: ethereum\n\nfromToken: ETH\n\ntoToken: 0xdAC17F958D2ee523a2206206994597C13D831ec7 (USDT contract on Ethereum)\nThese constants ensure consistent API calls for fetching balances and executing swaps.\n\nGet ETH Balance\nRetrieves the wallet‚Äôs current Ethereum balance from:\nGET https://api.afkcrypto.com/v1/wallets/balances?chain=ethereum\nThe node filters and extracts the ETH balance for processing.\n\nLeave 5 ETH (Code Node)\nExecutes JavaScript logic to calculate how much ETH is safe to convert:\n\nConverts your balance from ETH ‚Üí wei (the smallest ETH unit).\n\nDefines a target reserve of 5 ETH (in wei).\n\nCalculates excess ETH above 5 ETH and prepares it for swapping.\n\nReturns key outputs:\n\namount (in wei)\n\nethBalanceReadable (in ETH)\n\nswapReadable (ETH ready for swap)\n\nswapNeeded = true if balance > 5 ETH\n\nThis ensures no swaps are triggered unless your wallet exceeds the 5 ETH reserve threshold.\n\nIf Condition\nChecks whether swapNeeded is true:\n\n‚úÖ True ‚Üí proceeds to execute the swap via AFK Crypto.\n\n‚ùå False ‚Üí ends the workflow (balance within the 5 ETH limit).\n\nHTTP Request (AFK Crypto Swap API)\nExecutes the swap request using:\nPOST https://api.afkcrypto.com/v1/trade/swap\nPayload includes:\n\nchain: ethereum\n\nfromToken: ETH\n\ntoToken: USDT\n\namount: calculated in wei\n\nIdempotency-Key: prevents duplicate swaps if retried\n\nOnce successful, the excess ETH is converted to USDT securely through the AFK Crypto Swap API.\n\nTelegram Notification\nSends a message to your connected Telegram chat:\n\nüí± Rebalanced: Swapped 1.72 ETH ‚Üí USDT\n\nThis confirmation keeps you informed of every swap event directly from your Telegram bot.\n\nHow to Use\n\nSet Up Credentials\n\nAdd your AFK Crypto API Key under HTTP Header Auth credentials.\n\nConnect your Telegram Bot with its token under Telegram API credentials.\n\nConfigure Parameters\n\nReplace \"CHAT_ID\" in the Telegram node with your Telegram user or group chat ID.\n\nEnsure your Ethereum wallet is linked to your AFK Crypto account.\n\nActivate the Workflow\n\nEnable the Schedule Trigger to run daily at 12:00 AM.\n\nRun a manual test execution to confirm balance retrieval, swap execution, and Telegram delivery.\n\n(Optional) Extend This Workflow\n\nAdd Multi-Chain Support ‚Äî Extend logic to support Solana, Base, or Polygon wallets.\n\nAdd Historical Tracking ‚Äî Store daily rebalancing data in Notion, Google Sheets, or an n8n Data Store.\n\nAdd USD Conversion ‚Äî Integrate CoinGecko or AFK Crypto price data to include USD values in the Telegram message.\n\nInclude Discord Alerts ‚Äî Send parallel swap notifications to a Discord channel for team monitoring.\n\nDynamic Thresholds ‚Äî Replace the static 5 ETH reserve with a configurable environment variable or external data input.\n\nRequirements\n\nn8n instance with active internet access.\n\nAFK Crypto account + API key ‚Üí www.afkcrypto.com\n\nEthereum wallet connected to your AFK Crypto account.\n\nTelegram Bot with permission to send messages to your chosen chat or group.\n\nSummary\n\nüíº Automate your Ethereum portfolio management.\nThis workflow intelligently ensures you always maintain a 5 ETH reserve, while automatically swapping any excess into USDT for stable, low-risk storage.\nWith real-time Telegram alerts and automated execution at midnight, you can manage your crypto reserves efficiently, reduce manual intervention, and secure profits ‚Äî all hands-free.",
        "height": 2432,
        "width": 1280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1344,
        -1168
      ],
      "typeVersion": 1,
      "id": "191533c0-d97a-4075-a31a-04b4c66f6683",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "Get SOL Balance": {
      "main": [
        [
          {
            "node": "Leave 5 ETH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Get SOL Balance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "12AM": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leave 5 ETH": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6db6df43-d566-45ea-a6dd-119d6671a27f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c4eae34af81eeff658410c97c38d8a485e4c73ba5cea5b25eef189aa5e5a73b9"
  },
  "id": "cDXlEx3pDaXEuuYp",
  "tags": []
}